on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-12]
        node-version: [20.15.0]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        # install dbus-1 dep for xosms
      - if: matrix.os == 'ubuntu-latest'
        name: install ubuntu deps
        run: |
          sudo apt update
          sudo apt install libdbus-1-dev snapd
          sudo snap install snapcraft --classic

      - if: matrix.os == 'windows-latest'
        name: install windows deps
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.8
        with:
          sdk-version: 19041

      - name: Install dependencies
        run: |
          yarn config set ignore-engines true
          yarn --frozen-lockfile

      - name: Build Electron release
        run: yarn release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VUE_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          VUE_APP_DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          VUE_APP_LASTFM_API: ${{ secrets.LASTFM_API }}
          VUE_APP_LASTFM_SECRET: ${{ secrets.LASTFM_SECRET }}
          VUE_APP_GITHUB_REPOSITORY: ${{ github.repository }}
      - if: matrix.os == 'ubuntu-latest'
        name: Upload release source maps to sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROJECT: ytmdesktop
          SENTRY_ORG: venipa
          SENTRY_DEPLOY_ENVIRONMENT: production
        run: |
          # Install Sentry CLI
          curl -sL https://sentry.io/get-cli/ | bash

          # Create new Sentry release
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)
          sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          sentry-cli releases finalize $SENTRY_RELEASE

          # Create new deploy for this Sentry release
          sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT
        
